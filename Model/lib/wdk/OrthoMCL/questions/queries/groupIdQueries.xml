<?xml version="1.0" encoding="UTF-8"?>
<wdkModel>

    <!-- *************** -->
    <!-- model querySets -->
    <!-- *************** -->

    <!--
    A "query" obtains tabular values from a data source.  It has columns
    and parameters.  So far, only SQL data sources are supported, but others,
    such as flat files are coming.  

    Queries are used for different purposes: providing primary keys to a 
    question; providing attributes and tables to a record; and, providing
    vocabularies to vocabulary parameters.

    A "query set" is a grouping of queries.  It is useful in organizing the
    model xml file.  

    The full name of a query is of the form "set_name.name."
    -->


    <!-- Queries that return RNA primary keys (for use in questions and nested records.). -->

    <querySet name="GroupIds" queryType="id">

        <sqlQuery name="ByNameList" isCacheable="true">
            <paramRef ref="groupParams.group_names"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT og.name AS group_name
FROM apidb.OrthologGroup og, ($$group_names$$) ds
WHERE og.name = ds.group_name
UNION
SELECT og.name AS group_name
FROM apidb.OrthologGroup og, apidb.OrthologGroupAaSequence ogs,
     Dots.AaSequenceDbRef seqref, Sres.DbRef ref,
     Sres.ExternalDatabase db, Sres.ExternalDatabaseRelease dbr,
	 ($$group_names$$) ds
WHERE og.ortholog_group_id = ogs.ortholog_group_id
  AND ogs.aa_sequence_id = seqref.aa_sequence_id
  AND seqref.db_ref_id = ref.db_ref_id
  AND ref.external_database_release_id = dbr.external_database_release_id
  AND dbr.external_database_id = db.external_database_id
  AND db.name = 'OrthoMCL Old Groups'
  AND ref.primary_identifier = ds.group_name
	      ]]>
            </sql>
        </sqlQuery>  


        <sqlQuery name="ByAccession" isCacheable="true">
            <paramRef ref="groupParams.group_name"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT og.name AS group_name
FROM apidb.OrthologGroup og
WHERE og.name LIKE replace($$group_name$$, '*', '%')
UNION
SELECT og.name AS group_name
FROM apidb.OrthologGroup og, apidb.OrthologGroupAaSequence ogs,
     Dots.AaSequenceDbRef seqref, Sres.DbRef ref,
     Sres.ExternalDatabase db, Sres.ExternalDatabaseRelease dbr
WHERE og.ortholog_group_id = ogs.ortholog_group_id
  AND ogs.aa_sequence_id = seqref.aa_sequence_id
  AND seqref.db_ref_id = ref.db_ref_id
  AND ref.external_database_release_id = dbr.external_database_release_id
  AND dbr.external_database_id = db.external_database_id
  AND db.name = 'OrthoMCL Old Groups'
  AND ref.primary_identifier LIKE replace($$group_name$$, '*', '%')
UNION
SELECT og.name AS group_name
FROM apidb.OrthologGroup og, apidb.OrthologGroupAaSequence ogs,
     Dots.ExternalAaSequence eas
WHERE og.ortholog_group_id = ogs.ortholog_group_id
  AND ogs.aa_sequence_id = eas.aa_sequence_id
  AND (eas.source_id LIKE replace($$group_name$$, '*', '%')
       OR eas.secondary_identifier LIKE replace($$group_name$$, '*', '%'))
               ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="ByPFamName">
            <paramRef ref="sharedParams.pfam_name"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT DISTINCT og.name AS group_name
FROM apidb.OrthologGroup og,
     apidb.OrthologGroupAaSequence ogs,
     dots.DomainFeature df,
     dots.DbRefAaFeature dbaf,
     sres.DbRef db
WHERE og.ortholog_group_id = ogs.ortholog_group_id
  AND ogs.aa_sequence_id = df.aa_sequence_id
  AND df.aa_feature_id = dbaf.aa_feature_id
  AND dbaf.db_ref_id = db.db_ref_id
  AND ogs.ortholog_group_id != 0 
  AND db.primary_identifier LIKE replace($$pfam_name$$, '*', '%')
                ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="ByPFamKeyword">
            <paramRef ref="sharedParams.pfam_keyword"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT DISTINCT og.name AS group_name
FROM apidb.OrthologGroup og,
     apidb.OrthologGroupAaSequence ogs,
     dots.DomainFeature df,
     dots.DbRefAaFeature dbaf,
     sres.DbRef db
WHERE og.ortholog_group_id = ogs.ortholog_group_id
  AND ogs.aa_sequence_id = df.aa_sequence_id
  AND df.aa_feature_id = dbaf.aa_feature_id
  AND dbaf.db_ref_id = db.db_ref_id
  AND ogs.ortholog_group_id != 0 
  AND  CATSEARCH(db.secondary_identifier, $$pfam_keyword$$, '') > 0
UNION
SELECT DISTINCT og.name AS group_name
FROM (  SELECT db_ref_id
        from sres.DbRef
        where CATSEARCH(secondary_identifier, 'CANNOT_HAVE_TWO_QUERYCODES', '') > 0
     union
       select db_ref_id
        from sres.DbRef
        where CATSEARCH(remark, $$pfam_keyword$$, '') > 0
     ) db,
     apidb.OrthologGroup og,
     apidb.OrthologGroupAaSequence ogs,
     dots.DomainFeature df,
     dots.DbRefAaFeature dbaf
WHERE og.ortholog_group_id = ogs.ortholog_group_id
  AND ogs.aa_sequence_id = df.aa_sequence_id
  AND df.aa_feature_id = dbaf.aa_feature_id
  AND dbaf.db_ref_id = db.db_ref_id
  AND ogs.ortholog_group_id != 0
                ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="ByKeyword">
            <paramRef ref="sharedParams.keyword"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT DISTINCT og.name AS group_name
FROM apidb.OrthologGroup og, apidb.OrthologGroupAaSequence ogs,
     dots.AaSequenceImp asi
WHERE og.ortholog_group_id = ogs.ortholog_group_id
  AND ogs.aa_sequence_id = asi.aa_sequence_id
  AND asi.subclass_view = 'ExternalAASequence'
  AND CATSEARCH(asi.description, $$keyword$$, '')>0
                ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="BySequenceCount">
            <paramRef ref="groupParams.sequence_count_min"/>
            <paramRef ref="groupParams.sequence_count_max"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT og.name AS group_name
FROM apidb.OrthologGroup og
WHERE og.number_of_members >= $$sequence_count_min$$
  AND og.number_of_members <= $$sequence_count_max$$
                ]]>
            </sql>
        </sqlQuery>


	<!-- PLANA_TEMPORARY -->
        <sqlQuery name="ByIsChangedInPlanA">
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT group_id AS group_name
FROM apidb.GroupsChangedInPlanA
where min_score is not null
                ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="ByIsChangedInPlanASingleClade">
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT group_id AS group_name
FROM apidb.GroupsChangedInPlanA
where single_clades_changed is not null
                ]]>
            </sql>
        </sqlQuery>
	<!-- END_TEMPORARY -->

        <sqlQuery name="ByGenomeCount">
            <paramRef ref="groupParams.genome_count_min"/>
            <paramRef ref="groupParams.genome_count_max"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT group_name FROM (
SELECT og.name AS group_name, count(DISTINCT taxon_id) AS genome_count
FROM apidb.OrthologGroup og, apidb.OrthologGroupAaSequence ogs,
     dots.ExternalAaSequence eas
WHERE og.ortholog_group_id = ogs.ortholog_group_id
  AND ogs.aa_sequence_id = eas.aa_sequence_id
GROUP BY og.name
)
WHERE genome_count >= $$genome_count_min$$
  AND genome_count <= $$genome_count_max$$
                ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="ByPercentMatchPairs">
            <paramRef ref="groupParams.percent_min"/>
            <paramRef ref="groupParams.percent_max"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT group_name FROM (
SELECT og.name AS group_name, number_of_match_pairs / (number_of_members * (number_of_members - 1)) AS percent_match_pairs
FROM apidb.OrthologGroup og
)
WHERE percent_match_pairs >= $$percent_min$$
  AND percent_match_pairs <= $$percent_max$$
                ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="ByPercentIdentity">
            <paramRef ref="groupParams.percent_min"/>
            <paramRef ref="groupParams.percent_max"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT og.name AS group_name
FROM apidb.OrthologGroup og
WHERE og.avg_percent_identity >= $$percent_min$$
  AND og.avg_percent_identity <= $$percent_max$$
                ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="ByPercentMatch">
            <paramRef ref="groupParams.percent_min"/>
            <paramRef ref="groupParams.percent_max"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT og.name AS group_name
FROM apidb.OrthologGroup og
WHERE og.avg_percent_match >= $$percent_min$$
  AND og.avg_percent_match <= $$percent_max$$
                ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="ByPhyleticPattern">
            <paramRef ref="groupParams.phyletic_expression"/>
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT og.name AS group_name
FROM apidb.OrthologGroup og, ($$phyletic_expression$$) ex
WHERE og.ortholog_group_id = ex.ortholog_group_id
                ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="FromSequences">
            <paramRef ref="sharedParams.sequence_answer"/>
            <column name="group_name"/>
            <column name="wdk_weight"/>
            <sql>
                <![CDATA[
SELECT og.name AS group_name, sum(sa.wdk_weight) AS wdk_weight
FROM apidb.OrthologGroup og, apidb.OrthologGroupAaSequence ogs,
     dots.ExternalAaSequence eas, ($$sequence_answer$$) sa
WHERE og.ortholog_group_id = ogs.ortholog_group_id
  AND ogs.aa_sequence_id = eas.aa_sequence_id
  AND eas.secondary_identifier = sa.full_id
GROUP BY og.name
                ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="AllGroups" isCacheable="false">
            <column name="group_name"/>
            <sql>
                <![CDATA[
SELECT og.name AS group_name FROM apidb.OrthologGroup og
              ]]>
            </sql>
        </sqlQuery>
    </querySet>

</wdkModel>
