%{
use OrthoMCLWebsite::Model::Ppe::Boolean; 
use OrthoMCLWebsite::Model::Ppe::Comparison; 
use OrthoMCLWebsite::Model::Ppe::Other;
%}

%%

# example PPE expressions:
# aaa + bbb + ccc > 5T
# aaa + EUK < 2 AND ccc + ddd + MAM < 3T AND OTHER > 4
# ((aaa + bbb < 5 AND ccc + ddd < 3T) OR (ggg < 2 AND fff >= 15)) AND iii < 2

boolean:  comparison moreBooleans    { OrthoMCLWebsite::Model::Ppe::Boolean->new($_[1], @$_[2]) }
|         '(' expr ')' moreBooleans  { OrthoMCLWebsite::Model::Ppe::Boolean->new($_[1], @$_[2]) }
;

moreBooleans: AND boolean            { [$_[2], 'AND'] }
|             OR  boolean            { [$_[2], 'OR'] }
|                                    { [undef, undef] }
;

comparison: taxa COMPARATOR VALUE  { OrthoMCLWebsite::Model::Ppe::Comparison->new($_[1], $_[2], @$_[3]) }
|           OTHER COMPARATOR VALUE { OrthoMCLWebsite::Model::Ppe::Other->new($_[2], $_[3]) }
;

taxa:       TAXON moreTaxa         { [$_[1], @$_[2]] } 
;

moreTaxa:  '+' taxa                 { [@$_[1]] }
|
;

%%

sub Lexer {
    my ($parser) = @_;

    my @tokenDescriptor;

    if ($parser->YYData()->{INPUT} =~ s/^([a-z]{3})\s*//) {
          @tokenDescriptor = ('TAXON', $1);
       }
    elsif ($parser->YYData()->{INPUT} =~ s/^([A-Z]{3})\s*//) {
          @tokenDescriptor = ('TAXON', $1);
       }
    elsif ($parser->YYData()->{INPUT} =~ s/^([\>\<]?\=)\s*//) {
          @tokenDescriptor = ('COMPARATOR', $1);
       }

    elsif ($parser->YYData()->{INPUT} =~ s/^OTHER\s*//) {
          @tokenDescriptor = ('OTHER', undef);
       }

    elsif ($parser->YYData()->{INPUT} =~ s/^(\d+)T\s*//) {
          @tokenDescriptor = ('VALUE', [$1,'T']);
       }

    elsif ($parser->YYData()->{INPUT} =~ s/^(\d+)\s*//) {
          @tokenDescriptor = ('VALUE', [$1,'P']);
       }
    else {
	my $input = $parser->YYData()->{INPUT};
    	 die("can't recognize token at head of '$input'");
    }

    return @tokenDescriptor;
}

sub Error {
    my ($parser) = @_;

    if (exists $parser->YYData->{ERRMSG}) {
    	print  STDERR $parser->YYData->{ERRMSG};
    	delete $parser->YYData->{ERRMSG};
    }
}
