<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version="1.1"
     baseProfile="full"
     height="690" 
     width="947">

    <g id="edge_general" style="stroke:grey;stroke-width:2;"></g>
    <g id="edge_rbetterh" style="stroke:green;stroke-width:2;"></g>
    <g id="edge_rbesth" style="stroke:red;stroke-width:2;"></g>

<script>
<![CDATA[
var svgNS = "http://www.w3.org/2000/svg";
var strokeWidth = 2;
var strokeWidthH = 4;
var nodeR = 5;
var nodeRH = 7;
var flagGeneralEdge = 0;
var flagRbetterhEdge = 0;
var flagRbesthEdge = 0;

var nodeArray = [];
var edgeRbesthArray = [];
var edgeRbetterhArray = [];
var edgeGeneralArray = [];

function edge(id,coord,info)
{
  this.id    = id;
  this.coord = coord;
  this.info  = info;
}

function node(accession,name,desc,genome,nodes,edges)
{
  this.accession     = accession;
  this.name          = name;
  this.desc          = desc;
  this.genome        = genome;
  this.nodes         = nodes;
  this.edges         = edges;
}

function switchEdges(type) {
    if (type == 'general') {
        if (flagGeneralEdge == 1) {
            for (i=0; i<edgeGeneralArray.length; i++) {
                var element = document.getElementById(edgeGeneralArray[i].id);
                element.parentNode.removeChild(element);
            }
            flagGeneralEdge = 0;
        } else {
            for (i=0; i<edgeGeneralArray.length; i++) {
                var newEdge = document.createElementNS(svgNS,"line");
                var coord = edgeGeneralArray[i].coord;
                newEdge.setAttributeNS(null,"id",edgeGeneralArray[i].id);
                newEdge.setAttributeNS(null,"x1",coord[0]);
                newEdge.setAttributeNS(null,"y1",coord[1]);
                newEdge.setAttributeNS(null,"x2",coord[2]);
                newEdge.setAttributeNS(null,"y2",coord[3]);
                newEdge.setAttributeNS(null,"onmouseover","highlightEdge(evt,'general')");
                newEdge.setAttributeNS(null,"onmouseout","unhighlightEdge(evt)");
                document.getElementById("edge_general").appendChild(newEdge);
            }
            flagGeneralEdge = 1;
        }
    } else if (type == 'rbetterh') {
        if (flagRbetterhEdge == 1) {
            for (i=0; i<edgeRbetterhArray.length; i++) {
                var element = document.getElementById(edgeRbetterhArray[i].id);
                element.parentNode.removeChild(element);
            }
            flagRbetterhEdge = 0;
        } else {
            for (i=0; i<edgeRbetterhArray.length; i++) {
                var newEdge = document.createElementNS(svgNS,"line");
                var coord = edgeRbetterhArray[i].coord;
                newEdge.setAttributeNS(null,"id",edgeRbetterhArray[i].id);
                newEdge.setAttributeNS(null,"x1",coord[0]);
                newEdge.setAttributeNS(null,"y1",coord[1]);
                newEdge.setAttributeNS(null,"x2",coord[2]);
                newEdge.setAttributeNS(null,"y2",coord[3]);
                newEdge.setAttributeNS(null,"onmouseover","highlightEdge(evt,'rbetterh')");
                newEdge.setAttributeNS(null,"onmouseout","unhighlightEdge(evt)");
                document.getElementById("edge_rbetterh").appendChild(newEdge);
            }
            flagRbetterhEdge = 1;
        }
    } else if (type == 'rbesth') {
        if (flagRbesthEdge == 1) {
            for (i=0; i<edgeRbesthArray.length; i++) {
                var element = document.getElementById(edgeRbesthArray[i].id);
                element.parentNode.removeChild(element);
            }
            flagRbesthEdge = 0;
        } else {
            for (i=0; i<edgeRbesthArray.length; i++) {
                var newEdge = document.createElementNS(svgNS,"line");
                var coord = edgeRbesthArray[i].coord;
                newEdge.setAttributeNS(null,"id",edgeRbesthArray[i].id);
                newEdge.setAttributeNS(null,"x1",coord[0]);
                newEdge.setAttributeNS(null,"y1",coord[1]);
                newEdge.setAttributeNS(null,"x2",coord[2]);
                newEdge.setAttributeNS(null,"y2",coord[3]);
                newEdge.setAttributeNS(null,"onmouseover","highlightEdge(evt,'rbesth')");
                newEdge.setAttributeNS(null,"onmouseout","unhighlightEdge(evt)");
                document.getElementById("edge_rbesth").appendChild(newEdge);
            }
            flagRbesthEdge = 1;
        }
    }
}

function highlightEdge(evt,type) {
    var edgeId = evt.target.getAttributeNS(null,"id");
    document.getElementById(edgeId).setAttributeNS(null,"style","stroke-width:"+strokeWidthH+";");
    if (type == 'general') {
        for(i=0; i<edgeGeneralArray.length; i++) {
            if (edgeGeneralArray[i].id == edgeId) {
                document.getElementById("info1").firstChild.nodeValue = "BLASTP E-value: " + edgeGeneralArray[i].info;
            }
        }
    } else if (type == 'rbetterh') {
        for(i=0; i<edgeRbetterhArray.length; i++) {
            if (edgeRbetterhArray[i].id == edgeId) {
                document.getElementById("info1").firstChild.nodeValue = "BLASTP E-value: " + edgeRbetterhArray[i].info;
            }
        }
    } else if (type == 'rbesth') {
        for(i=0; i<edgeRbesthArray.length; i++) {
            if (edgeRbesthArray[i].id == edgeId) {
                document.getElementById("info1").firstChild.nodeValue = "BLASTP E-value: " + edgeRbesthArray[i].info;
            }
        }
    }
}
function unhighlightEdge(evt) {
    var edgeId = evt.target.getAttributeNS(null,"id");
    document.getElementById(edgeId).setAttributeNS(null,"style","stroke-width:"+strokeWidth+";");
    document.getElementById("info1").firstChild.nodeValue = "";
}

function highlightNode(evt) {
    var nodeId = evt.target.getAttributeNS(null,"id");
    document.getElementById(nodeId).setAttributeNS(null,"r",nodeRH);
    for(i=0; i<nodeArray.length; i++) {
        if (nodeArray[i].accession == nodeId)
        {
            document.getElementById("info1").firstChild.nodeValue = "Accession: " + nodeArray[i].accession + ", " + nodeArray[i].name;
            document.getElementById("info2").firstChild.nodeValue = "Description: " + nodeArray[i].desc;
            document.getElementById("info3").firstChild.nodeValue = "Genome: " + nodeArray[i].genome;
            var nodes = nodeArray[i].nodes;
            for (j=0; j<nodes.length; j++) {
                document.getElementById(nodes[j]).setAttributeNS(null,"r",nodeRH);
            }
            var edges = nodeArray[i].edges;
            for (j=0; j<edges.length; j++) {
                if (document.getElementById(edges[j])) {
                    document.getElementById(edges[j]).setAttributeNS(null,"style","stroke-width:"+strokeWidthH+";");
                }
            }
        }
    }
}

function unhighlightNode(evt) {
    var nodeId = evt.target.getAttributeNS(null,"id");
    document.getElementById(nodeId).setAttributeNS(null,"r",nodeR);
    for(i=0; i<nodeArray.length; i++) {
        if (nodeArray[i].accession == nodeId)
        {
            document.getElementById("info1").firstChild.nodeValue = "";
            document.getElementById("info2").firstChild.nodeValue = "";
            document.getElementById("info3").firstChild.nodeValue = "";
            var nodes = nodeArray[i].nodes;
            for (j=0; j<nodes.length; j++) {
                document.getElementById(nodes[j]).setAttributeNS(null,"r",nodeR);
            }
            var edges = nodeArray[i].edges;
            for (j=0; j<edges.length; j++) {
                if (document.getElementById(edges[j])) {
                    document.getElementById(edges[j]).setAttributeNS(null,"style","stroke-width:"+strokeWidth+";");
                }
            }
        }
    }
}

function highlightSwitch(switchId, flag) {
    var color = flag ? "red" : "black";
    document.getElementById(switchId).setAttributeNS(null,"style","fill:" + color + ";");
}

<TMPL_VAR NAME="SVG_CONTENT">

    <rect id="control" x="647" y="0" width="300" height="80" fill="rgb(150,200,200)"/>
    <text id="text_control" x="657" y="20" style="font-size: 11px">
        EDGE CONTROL
        <tspan x="667" dy="5" onclick="showAllEdges()"> </tspan>
        <tspan id="switch_best" x="667" dy="15"
            onclick="switchEdges('rbesth')"
            onmouseover="highlightSwitch('switch_best', true)"
            onmouseout="highlightSwitch('switch_best', false)"> -- SHOW/REMOVE Ortholog Edges </tspan>
        <tspan id="switch_better" x="667" dy="15"
            onclick="switchEdges('rbetterh')"
            onmouseover="highlightSwitch('switch_better', true)"
            onmouseout="highlightSwitch('switch_better', false)"> -- SHOW/REMOVE Inparalog Edges </tspan>
        <tspan id="switch_general" x="667" dy="15"
            onclick="switchEdges('general')"
            onmouseover="highlightSwitch('switch_general', true)"
            onmouseout="highlightSwitch('switch_general', false)"> -- SHOW/REMOVE General Edges </tspan>
    </text>

    <rect id="info" x="0" y="0" width="647" height="80" fill="rgb(200,150,200)"/>
    <text id="text_info" x="10" y="20" style="font-size: 11px"> EDGE/NODE INFORMATION </text>
    <text id="info1" x="15" y="40" style="font-size: 11px"> </text>
    <text id="info2" x="15" y="55" style="font-size: 11px"> </text>
    <text id="info3" x="300" y="40" style="font-size: 11px"> </text>
</svg>
